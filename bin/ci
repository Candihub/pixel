#!/usr/bin/env bash

function usage() {
    declare script_name="$0"

    echo "$script_name [options]"
    echo
    echo "Options:"
    echo "  -h|--help           : Display this help message"
    echo "  --set-git-repo      : Setup git repository from raw sources"
    echo "  --install-dockerize : Install dockerize tool"
    echo "  --get-docker-tag    : Output docker tag given ci branch name"
    echo

    exit 1
}

function set_git_repo() {
    echo "Setting up git repository from $CIRCLE_REPOSITORY_URL/$CIRCLE_BRANCH"

    git init
    git remote add origin "$CIRCLE_REPOSITORY_URL"
    mkdir "$HOME"/.ssh
    ssh-keyscan -t rsa github.com >> "$HOME"/.ssh/known_hosts
    git fetch
    git reset origin/"$CIRCLE_BRANCH"
    git checkout origin/"$CIRCLE_BRANCH"
}

function install_dockerize() {
    local version="v0.5.0"
    local archive="dockerize-linux-amd64-$version.tar.gz"

    echo "Installing dockerize $version"
    wget https://github.com/jwilder/dockerize/releases/download/"$version"/"$archive"
    tar -C "$HOME"/bin -xzvf "$archive"
    rm "$archive"
}

function get_docker_tag() {
    local tag="$CIRCLE_BRANCH"

    if [ "$tag" == "master" ]
    then
        tag="latest"
    fi

    if [ "$CIRCLE_TAG" != "" ]
    then
        tag="$CIRCLE_TAG"
    fi

    echo "$tag"
}

function main() {
  declare program="$0"

  while [[ "$#" -ge "1" ]]
  do
      local key="$1"
      shift

      case "$key" in
          --set-git-repo)
              set_git_repo
              ;;
          --install-dockerize)
              install_dockerize
              ;;
          --get-docker-tag)
              get_docker_tag
              ;;
          -h|--help|help)
              usage "$program"
              exit 0
              ;;
          *)
              echo "Unknown option: $key"
              exit 1
      esac
  done
}

main "$@"
